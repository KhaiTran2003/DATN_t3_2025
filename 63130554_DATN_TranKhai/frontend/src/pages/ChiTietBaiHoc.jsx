// src/pages/ChiTietBaiHoc.jsx
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { jwtDecode } from 'jwt-decode';

const ChiTietBaiHoc = ({ maBaiHoc, onLamQuiz }) => {
  const [baiHoc, setBaiHoc]         = useState(null);
  const [remainingTime, setRemainingTime] = useState(null);

  const token   = localStorage.getItem('token');
  const decoded = token ? jwtDecode(token) : null;
  const maHV    = decoded?.maHV;

  /* =====================================================
     H√†m chuy·ªÉn URL YouTube sang d·∫°ng embed
     ===================================================== */
  const convertToEmbedUrl = (url) => {
    if (!url) return '';
    const match = url.match(/(?:v=|youtu\.be\/)([a-zA-Z0-9_-]+)/);
    return match ? `https://www.youtube.com/embed/${match[1]}` : url;
  };

  /* =====================================================
     H√†m ƒë·ªãnh d·∫°ng mm:ss
     ===================================================== */
  const formatTime = (sec) =>
    `${String(Math.floor(sec / 60)).padStart(2, '0')}:${String(sec % 60).padStart(2, '0')}`;

  /* =====================================================
     üî• H√†m ƒë√°nh d·∫•u ho√†n th√†nh b√†i h·ªçc
     ===================================================== */
  const finishedLesson = () => {
    axios
      .post('http://localhost:5000/api/themtientrinh', {
        mahv: maHV,
        mabh: maBaiHoc,
      })
      .then(() => {
        // Ph√°t s·ª± ki·ªán cho ChuDe.jsx bi·∫øt ƒë·ªÉ unlock b√†i k·∫ø ti·∫øp
        window.dispatchEvent(
          new CustomEvent('lessonFinished', { detail: maBaiHoc })
        );
      })
      .catch((err) => console.error('L·ªói th√™m ti·∫øn tr√¨nh:', err));
  };

  /* =====================================================
     Ki·ªÉm tra ti·∫øn tr√¨nh tr∆∞·ªõc khi l√†m quiz
     ===================================================== */
  const checkTienTrinh = async () => {
    try {
      const res = await axios.post(
        'http://localhost:5000/api/checkTienTrinh',
        { maHV, maBH: maBaiHoc },
      );
      return res.data; // { allowQuiz, message }
    } catch (err) {
      console.error('L·ªói check ti·∫øn tr√¨nh:', err);
      return { allowQuiz: false, message: 'L·ªói server, vui l√≤ng th·ª≠ l·∫°i sau.' };
    }
  };

  /* =====================================================
     L·∫•y n·ªôi dung b√†i h·ªçc
     ===================================================== */
  useEffect(() => {
    if (!maBaiHoc) return;

    axios
      .get(`http://localhost:5000/api/baihoc/${maBaiHoc}`)
      .then((res) => setBaiHoc(res.data))
      .catch((err) => console.error('L·ªói t·∫£i n·ªôi dung b√†i h·ªçc:', err));
  }, [maBaiHoc]);

  /* =====================================================
     ƒê·∫øm ng∆∞·ª£c ‚Äì khi v·ªÅ 0 s·∫Ω g·ªçi finishedLesson()
     ===================================================== */
  useEffect(() => {
    if (!baiHoc) return;

    const totalSec = baiHoc.thoiGian * 60; // thoiGian l∆∞u ph√∫t
    setRemainingTime(totalSec);

    const interval = setInterval(() => {
      setRemainingTime((prev) => {
        if (prev <= 1) {
          clearInterval(interval);
          finishedLesson();           // ‚úÖ t·ª± ƒë√°nh d·∫•u ho√†n th√†nh
          return 0;
        }
        return prev - 1;
      });
    }, 1000);

    return () => clearInterval(interval);
  }, [baiHoc]);

  if (!baiHoc) return <p>ƒêang t·∫£i n·ªôi dung b√†i h·ªçc...</p>;

  /* =====================================================
     Giao di·ªán
     ===================================================== */
  return (
    <div style={{ padding: 10 }}>
      <h2>{baiHoc.tenBaiHoc}</h2>

      <div
        style={{ marginBottom: 24 }}
        dangerouslySetInnerHTML={{ __html: baiHoc.noiDung }}
      />

      {baiHoc.url && (
        <iframe
          width="100%"
          height="400"
          src={convertToEmbedUrl(baiHoc.url)}
          title="Video b√†i h·ªçc"
          frameBorder="0"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          allowFullScreen
        />
      )}

      {remainingTime !== null && (
        <div style={{ marginTop: 16, textAlign: 'center', fontSize: 18 }}>
          ‚è≥ Th·ªùi gian c√≤n l·∫°i: {formatTime(remainingTime)}
        </div>
      )}

      <div style={{ marginTop: 30, textAlign: 'center' }}>
        <button
          onClick={async () => {
            const { allowQuiz, message } = await checkTienTrinh();
            if (allowQuiz) {
              onLamQuiz(maBaiHoc);      // chuy·ªÉn sang quiz
            } else {
              alert(message);
            }
          }}
          style={{
            padding: '10px 20px',
            backgroundColor: '#28a745',
            color: '#fff',
            border: 'none',
            borderRadius: 5,
            cursor: 'pointer',
          }}
        >
          ‚úÖ L√†m b√†i ki·ªÉm tra
        </button>
      </div>
    </div>
  );
};

export default ChiTietBaiHoc;
