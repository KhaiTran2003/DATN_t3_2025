// src/pages/ChuDe.jsx
import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import axios from 'axios';
import '../css/pages/ChuDe.css'; // Custom CSS n·∫øu c√≥
import { jwtDecode } from "jwt-decode";

const ChuDe = ({ onChonBaiHoc, onChonQuiz,completedLessons, setCompletedLessons }) => {
  const { maKH } = useParams();
  const [tenKhoaHoc, setTenKhoaHoc] = useState('');
  const [chuDeList, setChuDeList] = useState([]);
  const token = localStorage.getItem("token");
  const decoded = token ? jwtDecode(token) : null;
  const maHV = decoded?.maHV;
  const [baiHocMap, setBaiHocMap] = useState({});
  const [moChuDe, setMoChuDe] = useState(null);
  const [autoSelected, setAutoSelected] = useState(false);

  useEffect(() => {
    const cl = [];
    for(const key in baiHocMap){
      for(const item of baiHocMap[key]){
        if(item.tinhTrang==="hoan thanh"){
          cl.push(item.maBH);
          
        }
      }
    }
    setCompletedLessons(cl);
  }, [baiHocMap]);

  // L·∫•y t√™n kh√≥a h·ªçc
  useEffect(() => {
    if (!maKH) return;
    axios
      .get(`http://localhost:5000/api/khoahoc/${maKH}`)
      .then((res) => setTenKhoaHoc(res.data.tenKhoaHoc))
      .catch((err) => console.error('L·ªói khi l·∫•y t√™n kh√≥a h·ªçc:', err));
  }, [maKH]);

  // L·∫•y danh s√°ch ch·ªß ƒë·ªÅ c·ªßa kh√≥a h·ªçc
  useEffect(() => {
    if (!maKH) return;
    axios
      .get(`http://localhost:5000/api/chude/khoahoc/${maKH}`)
      .then((res) => setChuDeList(res.data))
      .catch((err) => console.error('L·ªói l·∫•y ch·ªß ƒë·ªÅ:', err));
  }, [maKH]);

  // T·ª± ƒë·ªông t·∫£i danh s√°ch b√†i gi·∫£ng c·ªßa m·ªói ch·ªß ƒë·ªÅ khi chuDeList c√≥ d·ªØ li·ªáu
  useEffect(() => {
    if (chuDeList.length > 0) {
      chuDeList.forEach((cd) => {
        if (!baiHocMap[cd.maCD]) {
          console.log("Token",maHV)
          axios
            .post(`http://localhost:5000/api/baihoc/tinhtrang`, {
              maHV: maHV,
              maCD: cd.maCD
            })
            .then((res) => {
              setBaiHocMap((prev) => ({ ...prev, [cd.maCD]: res.data }));
            })
            .catch((err) =>
              console.error(`L·ªói t·∫£i b√†i h·ªçc cho ch·ªß ƒë·ªÅ ${cd.maCD}:`, err)
            );
        }
      });
    }
  }, [chuDeList, baiHocMap]);

  // T·ª± ƒë·ªông m·ªü ch·ªß ƒë·ªÅ ƒë·∫ßu ti√™n n·∫øu ch∆∞a c√≥ ch·ªß ƒë·ªÅ m·ªü
  useEffect(() => {
    if (!autoSelected && chuDeList.length > 0 && !moChuDe) {
      toggleChuDe(chuDeList[0].maCD);
    }
  }, [chuDeList, autoSelected, moChuDe]);

  // T·ª± ƒë·ªông ch·ªçn b√†i h·ªçc ƒë·∫ßu ti√™n c·ªßa ch·ªß ƒë·ªÅ ƒëang m·ªü n·∫øu ƒë√£ m·ªü
  useEffect(() => {
    if (
      !autoSelected &&
      moChuDe &&
      baiHocMap[moChuDe] &&
      baiHocMap[moChuDe].length > 0
    ) {
      onChonBaiHoc(baiHocMap[moChuDe][0].maBH);
      setAutoSelected(true);
    }
  }, [baiHocMap, moChuDe, autoSelected, onChonBaiHoc]);

  // H√†m ki·ªÉm tra m·ªü kh√≥a b√†i h·ªçc trong 1 ch·ªß ƒë·ªÅ:
  // N·∫øu lessonIndex==0 th√¨ unlocked n·∫øu ch·ªß ƒë·ªÅ ƒë√£ m·ªü.
  // N·∫øu lessonIndex>0 th√¨ unlocked n·∫øu b√†i h·ªçc li·ªÅn tr∆∞·ªõc ƒë√≥ ƒë√£ ho√†n th√†nh (c√≥ trong completedLessons)
  const isLessonUnlocked = (lessons, lessonIndex) => {
    if (!lessons || lessons.length === 0) return false;
    if(lessonIndex==0){
      
      return true;
    }
    return completedLessons.includes(lessons[lessonIndex-1].maBH);
    
  };
  // H√†m ki·ªÉm tra m·ªü kh√≥a ch·ªß ƒë·ªÅ:
  // Ch·ªß ƒë·ªÅ ƒë·∫ßu ti√™n lu√¥n m·ªü.
  // Ch·ªß ƒë·ªÅ th·ª© N (N>0) m·ªü n·∫øu t·∫•t c·∫£ b√†i h·ªçc c·ªßa ch·ªß ƒë·ªÅ N-1 ƒë√£ ho√†n th√†nh.
  const isTopicUnlocked = (topicIndex) => {
    if (topicIndex === 0) return true;
    const prevTopic = chuDeList[topicIndex - 1];
    const lessons = baiHocMap[prevTopic.maCD] || [];
    return lessons.length > 0 && lessons.every((lesson) => completedLessons.includes(lesson.maBH));
  };

  // M·ªü ho·∫∑c thu g·ªçn ch·ªß ƒë·ªÅ
  const toggleChuDe = (maCD) => {
    // N·∫øu ch·ªß ƒë·ªÅ ƒëang m·ªü th√¨ thu g·ªçn
    if (moChuDe === maCD) {
      setMoChuDe(null);
      return;
    }
    // Ki·ªÉm tra ch·ªß ƒë·ªÅ c√≥ ƒë∆∞·ª£c m·ªü kh√≥a kh√¥ng
    const topicIndex = chuDeList.findIndex((cd) => cd.maCD === maCD);
    if (!isTopicUnlocked(topicIndex)) {
      // N·∫øu ch∆∞a ƒë∆∞·ª£c m·ªü kh√≥a, kh√¥ng l√†m g√¨ ho·∫∑c th√¥ng b√°o
      alert('Ch·ªß ƒë·ªÅ n√†y ch∆∞a ƒë∆∞·ª£c m·ªü kh√≥a. H√£y ho√†n th√†nh c√°c b√†i gi·∫£ng c·ªßa ch·ªß ƒë·ªÅ tr∆∞·ªõc.');
      return;
    }
    // M·ªü ch·ªß ƒë·ªÅ
    setMoChuDe(maCD);
  };

  return (
    <div className="accordion-container">
      <h3 className="ten-khoa-hoc">üìö Kh√≥a h·ªçc: {tenKhoaHoc}</h3>
      {chuDeList.length === 0 ? (
        <p>ƒêang t·∫£i ch·ªß ƒë·ªÅ...</p>
      ) : (
        chuDeList.map((cd, topicIndex) => (
          <div key={cd.maCD} className="accordion-item">
            <div
              className="accordion-header"
              onClick={() => toggleChuDe(cd.maCD)}
            >
              <span>
                Ch∆∞∆°ng {topicIndex + 1}: {cd.tenChuDe}
              </span>
              <span className="lesson-count">
                {(baiHocMap[cd.maCD] && baiHocMap[cd.maCD].length) || 0} b√†i gi·∫£ng
              </span>
              {/* N·∫øu ch·ªß ƒë·ªÅ ch∆∞a m·ªü kh√≥a, hi·ªÉn th·ªã kh√≥a */}
              {!isTopicUnlocked(topicIndex) && <span className="lock-icon">üîí</span>}
            </div>
            {moChuDe === cd.maCD && (
              <div className="accordion-content">
                {baiHocMap[cd.maCD] && baiHocMap[cd.maCD].length > 0 ? (
                  baiHocMap[cd.maCD].map((bh, lessonIndex) => {
                    const unlocked = isLessonUnlocked(baiHocMap[cd.maCD], lessonIndex);
                    return (
                      <div
                        key={bh.maBH}
                        className={`lesson-item ${!unlocked ? 'locked' : ''}`}
                        onClick={() => {
                          if (unlocked) {
                            
                            onChonBaiHoc(bh.maBH,cd.maCD);
                          } else {
                            alert('H√£y ho√†n th√†nh b√†i h·ªçc tr∆∞·ªõc ƒë·ªÉ m·ªü kh√≥a b√†i h·ªçc n√†y.');
                          }
                        }}
                      >
                        <span>
                          {lessonIndex + 1}. {bh.tenBaiHoc}
                        </span>
                        {!unlocked && <span className="lock-icon">üîí</span>}
                      </div>
                    );
                  })
                ) : (
                  <p style={{ marginLeft: '16px' }}>Ch∆∞a c√≥ b√†i gi·∫£ng trong ch·ªß ƒë·ªÅ n√†y</p>
                )}
              </div>
            )}
          </div>
        ))
      )}
    </div>
  );
};

export default ChuDe;
